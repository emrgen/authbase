version: '3'

services:
  proxy:
    image: traefik:v3.2
    command: --api.insecure=true --providers.docker
    ports:
      # The HTTP port
      - "90:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock

  whoami:
    # A container that exposes an API to show its IP address
    image: traefik/whoami
    labels:
      - "traefik.http.routers.whoami.rule=Host(`whoami.local`)"
      - "traefik.http.middlewares.test-compress.compress=true"

  dragonfly:
    image: docker.dragonflydb.io/dragonflydb/dragonfly
    container_name: dragonfly
    environment:
      - VIRTUAL_HOST=dragonfly.local
    restart: always

  postgres:
    image: postgres:17.2
    container_name: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=authbase
    restart: always

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
#    volumes:
#      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    restart: always

#  grafana:
#    image: grafana/grafana
#    container_name: grafana
#    ports:
#      - "3000:3000"
#    restart: always

  spicedb:
    image: authzed/spicedb:v1.38.1
    ports:
      - '50051:50051'
    container_name: spicedb
    command: serve --grpc-preshared-key "spicedbkey" --skip-release-check=true --datastore-engine postgres --datastore-conn-uri postgres://postgres:postgres@postgres:5432/authbase
    environment:
      - VIRTUAL_HOST=spicedb.local
    restart: always
